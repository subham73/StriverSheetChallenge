/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;
        ListNode *h1 = l1, *h2 = l2;
        ListNode *res = new ListNode(), *headRes = res;

        while((l1 != nullptr || l2 != nullptr) || carry){
            int sum = 0;
            if(l1 != nullptr){
                sum = l1->val;
                l1 = l1->next;
            }
            if(l2 != nullptr){
                sum += l2->val;
                l2 = l2->next;
            }
            sum += carry;
            if(sum >= 10){
                carry = sum/10;
                sum =  sum %10;
            }
            else{
                carry = 0;
            }
            ListNode *tmp = new ListNode(sum);
            res->next =  tmp;
            res = res->next;
        }
        return headRes->next;
    }
};