#include<bits/stdc++.h>

#include<bits/stdc++.h>>
int lcs(string s, string t)
{
	//Write your code here
    int n=s.size();
    int m=t.size();
    vector<vector<int>> dp(n+1,vector<int>(m+1,0));
    for(int i=1;i<=n;i++){
      for (int j = 1; j <= m; j++) {
        if (s[i - 1] == t[j - 1])
          dp[i][j] = 1 + dp[i - 1][j - 1];
        else
          dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
      }
    }
    return dp[n][m];
}

#include<bits/stdc++.h>
int f(string s, string t, int i, int j){
	if(i > s.length()-1 || j > t.length()-1) return 0;
	int ln = max(f(s, t, i, j+1), f(s, t, i+1, j));
	if(s[i] == t[j]) ln = max(ln, 1+f(s, t, i+1, j+1));
	return ln;
}
int lcs(string s, string t)
{
	return f(s, t, 0, 0);
}